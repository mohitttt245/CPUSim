<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="complete machine1.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="Instructions" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field2a1f50e1">
	</Field>
	<Field name="address" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field49d166c7">
	</Field>
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field29c79b86">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="43319" readOnly="false" id="model.module.Register68f55c3" />
	<Register name="AR" width="12" initialValue="130" readOnly="false" id="model.module.Register564795ab" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register146226fa" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register16c845b" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register7d31f8f8" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Register17b1c038" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register126171c2" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register77ca6189" />
	<Register name="PC" width="12" initialValue="130" readOnly="false" id="model.module.Register54eb1b0" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register5118c1e" />
	<Register name="T" width="1" initialValue="0" readOnly="false" id="model.module.Register2173731c" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="halt" bit="0" register="model.module.Register5118c1e" halt="true" id="model.module.ConditionBit514085b3" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="4096" cellSize="16" id="model.module.RAM758ae8a3" />

	<!--............. set ...........................-->
	<Set name="AC(0)&lt;-1" register="model.module.Register68f55c3" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet131bf41b" />
	<Set name="AC&lt;-0" register="model.module.Register68f55c3" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet31f6c92b" />
	<Set name="E&lt;-0" register="model.module.Register16c845b" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet5ab40d0e" />

	<!--............. test ..........................-->
	<Test name="if DR!=0, skip" register="model.module.Register146226fa" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2ec2ad" />
	<Test name="if ac!=0 skip" register="model.module.Register68f55c3" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4c59559f" />
	<Test name="if ac(15)!=0 , skip" register="model.module.Register68f55c3" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4b6162ae" />
	<Test name="if ac(15)!=1 , skip" register="model.module.Register68f55c3" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test31c7cab1" />
	<Test name="if e!=0 ,skip" register="model.module.Register16c845b" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test478a5d8e" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register68f55c3" delta="1" id="model.microinstruction.Increment41790d4d" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register564795ab" delta="1" id="model.microinstruction.Increment14d63de" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register146226fa" delta="1" id="model.microinstruction.Incremented0b304" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register54eb1b0" delta="1" id="model.microinstruction.Increment1ba3f97d" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register68f55c3" source2="model.module.Register68f55c3" destination="model.module.Register68f55c3" id="model.microinstruction.Logical73c39abc" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register68f55c3" source2="model.module.Register146226fa" destination="model.module.Register68f55c3" id="model.microinstruction.Logical77afeda8" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register16c845b" source2="model.module.Register16c845b" destination="model.module.Register16c845b" id="model.microinstruction.Logical29a93ff8" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register68f55c3" source2="model.module.Register146226fa" destination="model.module.Register68f55c3" id="model.microinstruction.Arithmetic53a2cde0" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register16c845b" srcStartBit="0" dest="model.module.Register68f55c3" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR3cdbbb52" />
	<TransferRtoR name="AC(0-14)&lt;-AC(15-1)" source="model.module.Register68f55c3" srcStartBit="1" dest="model.module.Register68f55c3" destStartBit="0" numBits="15" id="model.microinstruction.TransferRtoR3411c3cc" />
	<TransferRtoR name="AC(1-15)&lt;-AC(0-14)" source="model.module.Register68f55c3" srcStartBit="0" dest="model.module.Register68f55c3" destStartBit="1" numBits="15" id="model.microinstruction.TransferRtoR54277c49" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register16c845b" srcStartBit="0" dest="model.module.Register68f55c3" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR112f66e0" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register146226fa" srcStartBit="0" dest="model.module.Register68f55c3" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR704f4ebc" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register77ca6189" srcStartBit="0" dest="model.module.Register564795ab" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR4a7aecda" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register54eb1b0" srcStartBit="0" dest="model.module.Register564795ab" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR255014e8" />
	<TransferRtoR name="E&lt;-T" source="model.module.Register2173731c" srcStartBit="0" dest="model.module.Register16c845b" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR4f227ec4" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register564795ab" srcStartBit="0" dest="model.module.Register54eb1b0" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR5893cb76" />
	<TransferRtoR name="T&lt;-AC(0)" source="model.module.Register68f55c3" srcStartBit="0" dest="model.module.Register2173731c" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR7d4163d8" />
	<TransferRtoR name="T&lt;-AC(15)" source="model.module.Register68f55c3" srcStartBit="15" dest="model.module.Register2173731c" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR2149e6ea" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="Decode&lt;-IR" ir="model.module.Register77ca6189" id="model.microinstruction.Decode73901a92" />

	<!--............. set condition bit .............-->
	<SetCondBit name="haltbit" bit="model.module.ConditionBit514085b3" value="1" id="model.microinstruction.SetCondBit359eb7ed" />

	<!--............. io ............................-->
	<IO name="AC&lt;-INPR" direction="input" type="integer" buffer="model.module.Register68f55c3" connection="[Console]" id="model.microinstruction.IO43b74d25" />
	<IO name="OUTR&lt;-AC" direction="output" type="integer" buffer="model.module.Register68f55c3" connection="[Console]" id="model.microinstruction.IO2d278d0f" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM758ae8a3" data="model.module.Register564795ab" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess5e1056b3" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM758ae8a3" data="model.module.Register146226fa" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess1ef1b343" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM758ae8a3" data="model.module.Register77ca6189" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess67d60bdd" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM758ae8a3" data="model.module.Register68f55c3" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess7608addd" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM758ae8a3" data="model.module.Register146226fa" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess2af1c861" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM758ae8a3" data="model.module.Register54eb1b0" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess39090dd7" />
	<MemoryAccess name="PC&lt;-M[AR]" direction="read" memory="model.module.RAM758ae8a3" data="model.module.Register54eb1b0" address="model.module.Register564795ab" id="model.microinstruction.MemoryAccess6ed671c8" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End5d834f8a" />

	<!--............. comment ...........................-->
	<Comment name="T3: HALT" id="model.microinstruction.Comment7995269b" />
	<Comment name="T3: Skip next instruction if E is 0" id="model.microinstruction.Comment803fbcb" />
	<Comment name="T3: Skip next instruction if AC is 0" id="model.microinstruction.Comment55068332" />
	<Comment name="T3: Skip next instruction if AC is -VE" id="model.microinstruction.Comment123e7907" />
	<Comment name="T3: Skip next instruction if AC is +VE" id="model.microinstruction.Comment424f2425" />
	<Comment name="T3: Increment AC" id="model.microinstruction.Comment55054204" />
	<Comment name="T3:circulate left content of AC" id="model.microinstruction.Comment34fb4485" />
	<Comment name="T3:circulate right content of AC" id="model.microinstruction.Comment55ece55c" />
	<Comment name="T3:complement E" id="model.microinstruction.Comment6e398dc8" />
	<Comment name="ends" id="model.microinstruction.Comment1153e769" />
	<Comment name="T3:complement AC" id="model.microinstruction.Comment7fe246aa" />
	<Comment name="end" id="model.microinstruction.Comment4d169a0f" />
	<Comment name="T3:set E=0" id="model.microinstruction.Comment6f6319a8" />
	<Comment name="ends instruction" id="model.microinstruction.Comment6105c382" />
	<Comment name="T3:Set value of AC=0" id="model.microinstruction.Commentc3f1e1e" />
	<Comment name="ends the instruction" id="model.microinstruction.Comment2d9c235" />
	<Comment name="T3: branch and save return address indriect" id="model.microinstruction.Comment4d0f183f" />
	<Comment name="T3: branch unconditionally indirect" id="model.microinstruction.Comment3934306e" />
	<Comment name="T3: store AC indirect" id="model.microinstruction.Comment4d1be7a7" />
	<Comment name="T3: load into AC indirect" id="model.microinstruction.Comment19f5c5b" />
	<Comment name="T3 And Indirect" id="model.microinstruction.Comment346462b7" />
	<Comment name="T3: Add indirect" id="model.microinstruction.Comment2ccb8315" />
	<Comment name="T3:L Branch and save return address" id="model.microinstruction.Comment3eff6ff4" />
	<Comment name="T3: Branch unconditionally" id="model.microinstruction.Comment45f981f4" />
	<Comment name="T3: Store content of AC to Memory" id="model.microinstruction.Comment521f3226" />
	<Comment name="T3:Load content of memory to AC" id="model.microinstruction.Comment223cc05b" />
	<Comment name="T3: ADD content of DR &amp; AC" id="model.microinstruction.Comment67f99b27" />
	<Comment name="T3: AND content of DR &amp; AC" id="model.microinstruction.Comment6e06500d" />
	<Comment name="FETCH cycle" id="model.microinstruction.Comment4523c1e9" />
	<Comment name="transfer content of PC to AR" id="model.microinstruction.Comment159ef0e" />
	<Comment name="read address from Memory into IR" id="model.microinstruction.Comment2a526ca1" />
	<Comment name="Increment PC" id="model.microinstruction.Comment7608d7de" />
	<Comment name="Decode" id="model.microinstruction.Comment2d7f6c7f" />

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.Comment4523c1e9" />
		<Microinstruction microRef="model.microinstruction.Comment159ef0e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR255014e8" />
		<Microinstruction microRef="model.microinstruction.Comment2a526ca1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess67d60bdd" />
		<Microinstruction microRef="model.microinstruction.Comment7608d7de" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.Comment2d7f6c7f" />
		<Microinstruction microRef="model.microinstruction.Decode73901a92" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ISZ_I" opcode="e" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Incremented0b304" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2af1c861" />
		<Microinstruction microRef="model.microinstruction.Test2ec2ad" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="IOF" opcode="f040" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
	</MachineInstruction>

	<MachineInstruction name="ION" opcode="f080" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
	</MachineInstruction>

	<MachineInstruction name="SKO" opcode="f100" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
	</MachineInstruction>

	<MachineInstruction name="SKI" opcode="f200" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.IO2d278d0f" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.IO43b74d25" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment7995269b" />
		<Microinstruction microRef="model.microinstruction.SetCondBit359eb7ed" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment803fbcb" />
		<Microinstruction microRef="model.microinstruction.Test478a5d8e" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment55068332" />
		<Microinstruction microRef="model.microinstruction.Test4c59559f" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment123e7907" />
		<Microinstruction microRef="model.microinstruction.Test31c7cab1" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment424f2425" />
		<Microinstruction microRef="model.microinstruction.Test4b6162ae" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment55054204" />
		<Microinstruction microRef="model.microinstruction.Increment41790d4d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment34fb4485" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2149e6ea" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR54277c49" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3cdbbb52" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4f227ec4" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment55ece55c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7d4163d8" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3411c3cc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR112f66e0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4f227ec4" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment6e398dc8" />
		<Microinstruction microRef="model.microinstruction.Logical29a93ff8" />
		<Microinstruction microRef="model.microinstruction.Comment1153e769" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#a5ebac" assemblyColors="#a5ebac" >
		<Microinstruction microRef="model.microinstruction.Comment7fe246aa" />
		<Microinstruction microRef="model.microinstruction.Logical73c39abc" />
		<Microinstruction microRef="model.microinstruction.Comment4d169a0f" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#ef89be" assemblyColors="#ef89be" >
		<Microinstruction microRef="model.microinstruction.Comment6f6319a8" />
		<Microinstruction microRef="model.microinstruction.CpusimSet5ab40d0e" />
		<Microinstruction microRef="model.microinstruction.Comment6105c382" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="Instructions" assemblyFormat="Instructions" instructionColors="#ef89be" assemblyColors="#ef89be" >
		<Microinstruction microRef="model.microinstruction.Commentc3f1e1e" />
		<Microinstruction microRef="model.microinstruction.CpusimSet31f6c92b" />
		<Microinstruction microRef="model.microinstruction.Comment2d9c235" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment4d0f183f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess39090dd7" />
		<Microinstruction microRef="model.microinstruction.Increment14d63de" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5893cb76" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment3934306e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess39090dd7" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment4d1be7a7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7608addd" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment19f5c5b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR704f4ebc" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment346462b7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Arithmetic53a2cde0" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment2ccb8315" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e1056b3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Logical77afeda8" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Incremented0b304" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2af1c861" />
		<Microinstruction microRef="model.microinstruction.Test2ec2ad" />
		<Microinstruction microRef="model.microinstruction.Increment1ba3f97d" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment3eff6ff4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess39090dd7" />
		<Microinstruction microRef="model.microinstruction.Increment14d63de" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5893cb76" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment45f981f4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6ed671c8" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment521f3226" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7608addd" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment223cc05b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR704f4ebc" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment67f99b27" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Arithmetic53a2cde0" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#96bccd #bff8e3" assemblyColors="#96bccd #bff8e3" >
		<Microinstruction microRef="model.microinstruction.Comment6e06500d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4a7aecda" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ef1b343" />
		<Microinstruction microRef="model.microinstruction.Logical77afeda8" />
		<Microinstruction microRef="model.microinstruction.End5d834f8a" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM758ae8a3" startingAddress="38" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
